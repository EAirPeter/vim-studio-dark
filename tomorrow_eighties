# vim: ft=colortemplate
Full name:  Tomorrow-Night-Eighties
Short name: tomorrow_eighties
Author:     Chris Kempson <http://chriskempson.com>
Maintainer: Gianmaria Bajo <mg1979.git@gmail.com>

verbatim
call vsd#init()
let s:load_for = { ft -> g:Vsd[ft] || g:Vsd.extra_syntax }
endverbatim

#===================================================================
# Dark variant
#===================================================================

Background: dark

# Color palette {{{1

Color:	    foreground	 #cccccc ~
Color:	    background	 #262626 ~
Color:	    selection	 #393939 ~
Color:	    comment	 #999999 ~
Color:	    red		 #f2777a ~
Color:	    orange	 #f99157 ~
Color:	    yellow	 #ffcc66 ~
Color:	    green	 #99cc99 ~
Color:	    aqua	 #66cccc ~
Color:	    blue	 #6699cc ~
Color:	    purple	 #cc99cc ~
Color:	    window	 #4d5057 ~
Color:	    special	 #f2c38f ~
Color:	    lightgrey	 #a9a9a9 ~

#===================================================================
# Highlight groups
#===================================================================

Normal				foreground		background

verbatim
let contrast = [ ['#303030', '236'],
                \['#262626', '235'],
		\['#1e1e1e', '234']]
let gui  = contrast[g:Vsd.contrast][0]
let term = contrast[g:Vsd.contrast][1]
exe "hi! Normal guibg=".gui." ctermbg=".term
if !has('patch-8.0.0616') && !has('gui_running') && !has('nvim')
  set background=dark
endif
endverbatim

EndOfBuffer			window	        none
LineNr				window	        none
NonText				selection	none
Search				background	special
IncSearch			red		special bold
TabLine				window		fg reverse
TabLineFill			window		fg reverse
StatusLine			window		yellow reverse
StatusLineNC			window		fg reverse
StatusLineTerm			window		yellow reverse
StatusLineTermNC		window		fg reverse
VertSplit			background	window
Visual				none		selection
VisualNOS			none		selection
Directory			blue		none
ModeMsg				green		none
MoreMsg				green		none
Question			green		none
WarningMsg			red		none
MatchParen			red		window bold
Folded				comment		none
FoldColumn			fg		none
CursorLine			none		selection
CursorLineNr			yellow		none
CursorColumn			fg		selection
Pmenu				fg		selection
PmenuSel			fg		selection reverse
SignColumn			fg		none
ColorColumn			fg		selection

Comment				comment		none
Todo				comment		none
Title				comment		none
Identifier			fg		none italic
Statement			purple		none
Conditional			blue		none
Repeat				blue		none
Structure			yellow		none
Function			blue		none
Constant			orange		none
Keyword				orange		none
String				green		none
Special				special		none
SpecialKey			special	        none
PreProc				purple		none
Operator			aqua		none
Type				yellow		none
Define				purple		none
Include				purple		none

SpellBad			red   		none undercurl
SpellCap			orange		none undercurl
SpellLocal			orange		none undercurl
SpellRare			purple 		none undercurl

DiffAdd				fg		selection
DiffDelete			none		red
DiffChange			fg		blue
DiffText			selection	blue

Cursor				background	green
QuickFixLine		->	Search
Delimiter		->	Special

diffAdded			green		none
diffRemoved			red		none
gitcommitSummary		fg		none bold

Command				red		none

Error				red		none
ErrorMsg			red		none
Conceal			->	Comment
Ignore			->	Comment
# PmenuSbar
# PmenuThumb
# TabLineSel
# ToolbarButton
# ToolbarLine
# Underlined
# WildMenu

# Plugins {{{2

GitGutterAdd			green		none
GitGutterChange			special		none
GitGutterChangeDelete		special		none
GitGutterDelete			red		none
SignifySignAdd			green		none
SignifySignChange		special		none
SignifySignChangeDelete		special		none
SignifySignDelete		red		none

# vimL {{{2

verbatim
if s:load_for('vim')
endverbatim
vimDocstring		->	String
vimEndBlock   		->	Conditional
vimConditional		->	Conditional
vimRepeat		->	Conditional
vimLetVar		->	foreground	none
vimCommand			red   		none
vimLet				lightgrey	none
vimCall				lightgrey	none
vimSelf				special		none italic
vimUserFunc			foreground	none
verbatim
endif
endverbatim

# help {{{2

helpCommand		->	Type
helpSectionDelim	->	PreProc
HelpHeadline		->	Statement

# Python {{{2

verbatim
if s:load_for('python')
endverbatim
pythonSelf		->	Identifier
pythonOperatorSymbol	->	Operator
pythonBraces		->	Special
pythonGlobalVar		orange	none
pythonStringType	->	Statement
pythonOperator		->	Statement
pythonBoolean		->	Command
pythonNone		->	Command
pythonStructure		->	Keyword
pythonStorageClass	->	Keyword
pythonTypeDef		->	Keyword
pythonFunction			red   		none
verbatim
endif
endverbatim

# Markdown {{{2

verbatim
if s:load_for('markdown')
endverbatim
mkdItalic			purple		none
mkdBold				purple		none
mkdBoldItalic			purple		none
mkdListItem			special		none
mkdID				purple		none
mkdRule				purple		none
verbatim
endif
endverbatim

# cpp {{{2

verbatim
if s:load_for('cpp')
endverbatim
cppStructure			purple		none
cStorageClass			red		none
cCharacter		->	String
cppOperatorSymbol	->	Operator
verbatim
endif
endverbatim

# Terminals {{{2

verbatim
let g:terminal_ansi_colors = [
	\ "#3C4C55",
	\ "#DF8C8C",
	\ "#A8CE93",
	\ "#DADA93",
	\ "#83AFE5",
	\ "#9A93E1",
	\ "#83AFE5",
	\ "#C5D4DD",
	\ "#608b4e",
	\ "#F2C38F",
	\ "#A8CE93",
	\ "#DADA93",
	\ "#83AFE5",
	\ "#D18EC2",
	\ "#83AFE5",
	\ "#E6EEF3"
	\]

" NEOVIM TERMINAL MODE
let g:terminal_color_0 = "#3C4C55"
let g:terminal_color_1 = "#DF8C8C"
let g:terminal_color_2 = "#A8CE93"
let g:terminal_color_3 = "#DADA93"
let g:terminal_color_4 = "#83AFE5"
let g:terminal_color_5 = "#9A93E1"
let g:terminal_color_6 = "#83AFE5"
let g:terminal_color_7 = "#C5D4DD"
let g:terminal_color_8 = "#608b4e"
let g:terminal_color_9 = "#F2C38F"
let g:terminal_color_10 = "#A8CE93"
let g:terminal_color_11 = "#DADA93"
let g:terminal_color_12 = "#83AFE5"
let g:terminal_color_13 = "#D18EC2"
let g:terminal_color_14 = "#83AFE5"
let g:terminal_color_15 = "#E6EEF3"

" FZF
let g:fzf_colors = {
	\ "fg":      ["fg", "Normal"],
	\ "none":      ["none", "Normal"],
	\ "hl":      ["fg", "Conditional"],
	\ "fg+":     ["fg", "CursorLine", "CursorColumn", "Normal"],
	\ "none+":     ["none", "CursorLine", "CursorColumn"],
	\ "hl+":     ["fg", "Conditional"],
	\ "info":    ["fg", "Conditional"],
	\ "border":  ["fg", "Ignore"],
	\ "prompt":  ["fg", "Comment"],
	\ "pointer": ["fg", "Conditional"],
	\ "marker":  ["fg", "Conditional"],
	\ "spinner": ["fg", "Conditional"],
	\ "header":  ["fg", "Conditional"]
	\}
endverbatim

# Functions {{{1

verbatim
call vsd#extras('tomorrow_eighties')
filetype detect
endverbatim

