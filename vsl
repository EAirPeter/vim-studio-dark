# vim: ft=colortemplate
Full name:  Vim Studio Light
Short name: vslight
Author:     Gianmaria Bajo <mg1979.git@gmail.com>
Maintainer: Gianmaria Bajo <mg1979.git@gmail.com>

verbatim
call vsd#init()
let s:load_for = { ft -> g:Vsd[ft] || g:Vsd.extra_syntax }
endverbatim

#===================================================================
# Light variant
#===================================================================

Background: light

# Color palette {{{1

Color:	    foreground	#1e1e1e ~ 
Color:	    background	#bdbdbd ~ 
Color:	    gold	#ffbc29 ~ 
Color:	    yellow	#f2c38f ~ 
Color:	    darkblue	#2222ff ~ 
Color:	    blue	#0070af ~ 
Color:	    green	#006600 ~ 
Color:	    lightgreen	#a8ce93 ~
Color:      cyangrey 	#7fc1ca ~ 
Color:	    cyan	#42dcd7 ~ 
Color:	    purple	#6f008a ~ 
Color:	    darkgrey	#333333 ~ 
Color:	    lightgrey	#aaaaaa ~ 
Color:	    grey	#888888 ~ 
Color:	    darkred	#a31515 ~ 
Color:	    lightred	#df8c8c ~ 
Color:	    red		#ff0000 ~ 
Color:	    white	#f2f2f2 ~ 
Color:	    special	#682900 ~ 

# Colors {{{1

Normal				foreground	background

verbatim
let contrast = [ ['#b2b2b2', '249'],
                \['#bdbdbd', '250'],
		\['#d0d0d0', '252']]
let gui  = contrast[g:Vsd.contrast][0]
let term = contrast[g:Vsd.contrast][1]
exe "hi! Normal guibg=".gui." ctermbg=".term
endverbatim

MatchParen			red		none
CursorLineNr			darkblue	none
Visual				none		lightgrey
VisualNOS			none		lightgrey
Folded				darkblue	none
FoldColumn			darkblue	none
IncSearch			red		gold
Search				blue		yellow
WildMenu			foreground	blue
Question			darkblue	gold
MoreMsg				darkblue	none
ModeMsg				darkblue	none
StatusLine			blue	        lightgrey
StatusLineTerm			blue	        lightgrey
StatusLineNC			fg		none
StatusLineTermNC		fg		none

Error				red		none
ErrorMsg			red		none
WarningMsg			lightred	none
Todo				darkblue	none

SpellBad			red   		none undercurl
SpellCap			purple		none undercurl
SpellLocal			blue		none undercurl
SpellRare			purple 		none undercurl

Pmenu				darkgrey	lightgrey
PmenuSel			foreground	blue
PmenuThumb			darkblue	darkblue
PmenuSbar			green		green

# DiffAdd				none		blue
# DiffChange			none		darkgrey
# DiffDelete			red	        none bold
# DiffText       			none	        darkred bold
DiffAdd				none		cyangrey
DiffChange			none		lightgrey
DiffDelete			lightred	none bold
DiffText			none		yellow bold

SignColumn			fg		none
LineNr				grey 		none
CursorLine			fg		lightgrey
CursorColumn			fg		lightgrey
ColorColumn			fg		lightgrey
EndOfBuffer			white		none
VertSplit			blue		blue
TabLine				fg		lightgrey
TabLineSel			lightgrey	darkblue
TabLineFill			fg		lightgrey
ToolbarLine			lightgrey	darkblue
ToolbarButton			darkblue	lightgrey

String				darkred		none
Constant			purple		none
Directory			darkblue	none

Identifier			darkgrey	none italic
Function			darkgrey	none bold
Conditional			darkblue	none bold
Statement			darkblue	none bold
Operator			darkgrey	none
Number				fg		none
Type				darkblue	none
PreProc				purple		none
Keyword				purple		none
Underlined			purple		none
Special				special		none
SpecialKey			special		none
NonText				blue		none
Title				blue		none
Comment				green		none
Ignore				green		none
Conceal				green		none

Cursor				foreground	darkblue
Command				purple		none
QuickFixLine		->	Search
Delimiter		->	Special

# Plugins {{{2

GitGutterAdd			green		none
GitGutterChange			special		none
GitGutterChangeDelete		special		none
GitGutterDelete			red		none
SignifySignAdd			green		none
SignifySignChange		special		none
SignifySignChangeDelete		special		none
SignifySignDelete		red		none

# vimL {{{2

verbatim
if s:load_for('vim')
endverbatim
vimDocstring		->	String
vimEndBlock   		->	Conditional
vimConditional		->	Conditional
vimRepeat		->	Conditional
vimLetVar		->	Identifier
helpCommand		->	Type
vimLet				darkgrey	none
vimCall				darkgrey	none
vimSelf				cyan		none italic
verbatim
endif
endverbatim

# help {{{2

helpCommand		->	Type
helpSectionDelim	->	PreProc
HelpHeadline		->	Statement

# Python {{{2

verbatim
if s:load_for('python')
endverbatim
pythonSelf		->	Identifier
pythonOperatorSymbol	->	Operator
pythonBraces		->	Special
pythonStringType	->	Statement
pythonOperator		->	Statement
pythonBoolean		->	Command
pythonNone		->	Command
pythonStructure		->	Keyword
pythonStorageClass	->	Keyword
pythonTypeDef		->	Keyword
pythonGlobalVar			darkblue	none italic
pythonFunction			purple		none bold
verbatim
endif
endverbatim

# Markdown {{{2

verbatim
if s:load_for('markdown')
endverbatim
mkdItalic			purple		 none
mkdBold				purple		 none
mkdBoldItalic			purple		 none
mkdListItem			special		 none
mkdID				purple		 none
mkdRule				purple		 none
verbatim
endif
endverbatim

# cpp {{{2

verbatim
if s:load_for('cpp')
endverbatim
cppStructure			purple		none
cStorageClass			red		none
cCharacter		->	String
cppOperatorSymbol	->	Operator
verbatim
endif
endverbatim

# Terminals {{{2

verbatim
let g:terminal_ansi_colors = [
	\ "#3C4C55",
	\ "#DF8C8C",
	\ "#A8CE93",
	\ "#DADA93",
	\ "#83AFE5",
	\ "#9A93E1",
	\ "#83AFE5",
	\ "#C5D4DD",
	\ "#608b4e",
	\ "#F2C38F",
	\ "#A8CE93",
	\ "#DADA93",
	\ "#83AFE5",
	\ "#D18EC2",
	\ "#83AFE5",
	\ "#E6EEF3"
	\]

" NEOVIM TERMINAL MODE
let g:terminal_color_0 = "#3C4C55"
let g:terminal_color_1 = "#DF8C8C"
let g:terminal_color_2 = "#A8CE93"
let g:terminal_color_3 = "#DADA93"
let g:terminal_color_4 = "#83AFE5"
let g:terminal_color_5 = "#9A93E1"
let g:terminal_color_6 = "#83AFE5"
let g:terminal_color_7 = "#C5D4DD"
let g:terminal_color_8 = "#608b4e"
let g:terminal_color_9 = "#F2C38F"
let g:terminal_color_10 = "#A8CE93"
let g:terminal_color_11 = "#DADA93"
let g:terminal_color_12 = "#83AFE5"
let g:terminal_color_13 = "#D18EC2"
let g:terminal_color_14 = "#83AFE5"
let g:terminal_color_15 = "#E6EEF3"

" FZF
let g:fzf_colors = {
	\ "fg":      ["fg", "Normal"],
	\ "bg":      ["bg", "Normal"],
	\ "hl":      ["fg", "Conditional"],
	\ "fg+":     ["fg", "CursorLine", "CursorColumn", "Normal"],
	\ "bg+":     ["bg", "CursorLine", "CursorColumn"],
	\ "hl+":     ["fg", "Conditional"],
	\ "info":    ["fg", "Conditional"],
	\ "border":  ["fg", "Ignore"],
	\ "prompt":  ["fg", "Comment"],
	\ "pointer": ["fg", "Conditional"],
	\ "marker":  ["fg", "Conditional"],
	\ "spinner": ["fg", "Conditional"],
	\ "header":  ["fg", "Conditional"]
		\}
endverbatim

# Functions {{{1

verbatim
call vsd#extras('vslight')
filetype detect
endverbatim

